n = 198148795890507031730221728469492521085435050254010422245429012501864312776356522213014006175424179860455397661479243825590470750385249479224738397071326661046694312629376866307803789411244554424360122317688081850938387121934893846964467922503328604784935624075688440234885261073350247892064806120096887751
v = 48071438195829770851852911364054237976158406255022684617769223046035836237425012457131162001786019505606941050117178190535720928339364199078329207393922570246678871062386142183424414041935978305046280399687623437942986302690599232729065536417757505209285175593543234585659130582659013242346666628394528555
e = 65537

p = 243910118538351506548384880034426728169248862274637495579956619639346929105044407816656098657792419005522183874367421793338227934532131627126006227183679
q = 812384484407320161490832594665883072791725169624454585337702079966797149882912959848711612604414824978196299404736544868460125347143996468854604241474169

assert p * q == n

phi = (p - 1) * (q - 1)
d = pow(e, -1, phi)

decoded = pow(v, d, n)
decoded_hex = hex(decoded)[2:]
if len(decoded_hex) % 2 != 0:
	decoded_hex = "0" + decoded_hex

print(decoded_hex)

decoded_str = ""
for p in range(0, len(decoded_hex), 2):
	c = int(decoded_hex[p:p+2], 16)
	decoded_str += chr(c) if (0x20 <= c) and (c < 0x7f) else "."

print(decoded_str)
